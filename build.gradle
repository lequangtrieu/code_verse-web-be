plugins {
    id 'groovy'
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'code-verse.com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.1'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-resource-server
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '6.2.3'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-config
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '6.2.3'
    // https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.37.3'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    //https://mvnrepository.com/artifact/com.google.firebase/firebase-admin
    implementation group: 'com.google.firebase', name: 'firebase-admin', version: '9.4.3'
    implementation 'vn.payos:payos-java:1.0.3'
    implementation 'com.google.api-client:google-api-client:2.2.0'

    // Groovy & Spock test support
    testImplementation 'org.codehaus.groovy:groovy:3.0.17'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'
    testImplementation 'org.spockframework:spock-spring:2.3-groovy-3.0'

    // JUnit Platform (Spock cháº¡y trÃªn JUnit 5)
    testImplementation 'org.junit.platform:junit-platform-launcher'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation("org.mockito:mockito-core:5.17.0")

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation("ch.qos.logback:logback-classic:1.5.18")
}

// ------------------------------
// ðŸ”§ Integration Test Setup
// ------------------------------
sourceSets {
    intTest {
        java {
            srcDirs = ['src/intTest/java', 'src/intTest/groovy']
        }
        resources {
            srcDirs = ['src/intTest/resources']
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

test {
    useJUnitPlatform()
}

tasks.register('intTest', Test) {
    description = 'Run integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
}

check.dependsOn tasks.named('intTest')
